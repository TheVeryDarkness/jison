{
  "name": "ts-jison",
  "description": "A lightly-typescriptified version of jison",
  "homepage": "http://jison.org",
  "license": "MIT",
  "keywords": [
    "jison",
    "bison",
    "yacc",
    "parser",
    "generator",
    "lexer",
    "flex",
    "tokenizer",
    "compiler",
    "typescript"
  ],
  "private": false,
  "version": "0.0.6",
  "repository": {
    "type": "git",
    "url": "git://github.com/ericprud/ts-jison.git"
  },
  "bugs": {
    "url": "http://github.com/ericprud/ts-jison/issues"
  },
  "author": {
    "name": "Eric Prudhommeaux",
    "email": "eric@w3.org",
    "url": "http://www.w3.org/People/Eric/"
  },
  "preferGlobal": true,
  "engines": {
    "node": ">=0.4"
  },
  "dependencies": {
    "@types/node": "^14.14.25",
    "browserify": "^17.0.0",
    "nomnom": "1.5.2",
    "ts-node": "^9.1.1",
    "typescript": "^4.1.3",
    "uglify-js": "^3.13.3"
  },
  "devDependencies": {
    "@ts-jison/common": "file:packages/common",
    "@ts-jison/lexer": "file:packages/lexer",
    "@ts-jison/lexer-generator": "file:packages/lexer-generator",
    "@ts-jison/parser": "file:packages/parser",
    "@ts-jison/parser-generator": "file:packages/parser-generator",
    "jison": "0.4.x",
    "test": "0.6.x"
  },
  "scripts": {
    "build999": "lerna run build",
    "build": "for d in packages/{common,lexer,parser}/; do (cd $d &&  tsc -b tsconfig.package.json); done",
    "clean": "rm -r packages/{common,lexer,parser}/lib/",
    "js-calculator": "npm run generate:js-calculator && npm run compile:js-calculator && npm run cli:js-calculator",
    "generate:js-calculator": "(cd packages/parser-generator/examples/ && ../lib/cli.js -t typescript -n TsCalc -n TsCalc -o ts-calculator.ts ts-calculator.jison)",
    "compile:js-calculator": "(cd packages/parser-generator/examples/ && tsc ts-calculator.ts)",
    "run:js-calculator": "(cd packages/parser-generator/examples/ && node ts-calculator.js calculator.input.txt)",
    "cli:js-calculator": "(cd packages/parser-generator/examples/ && node ts-calculator.cli.js calculator.input.txt)",
    "ts-calculator": "npm run generate:ts-calculator && npm run compile:ts-calculator && npm run cli:ts-calculator && npm run ts-node:ts-calculator",
    "generate:ts-calculator": "(cd packages/parser-generator/examples/ && ../lib/cli.js -t typescript -n TsCalc -n TsCalc -o ts-calculator.ts ts-calculator.jison)",
    "compile:ts-calculator": "(cd packages/parser-generator/examples/ && tsc ts-calculator.ts)",
    "run:ts-calculator": "(cd packages/parser-generator/examples/ && node ts-calculator.js calculator.input.txt)",
    "cli:ts-calculator": "(cd packages/parser-generator/examples/ && node ts-calculator.cli.js calculator.input.txt)",
    "ts-node:ts-calculator": "(cd packages/parser-generator/examples/ && ts-node ts-calculator.ts calculator.input.txt)",
    "test": "npm run js-calculator && npm run ts-calculator && (cd packages/lexer-generator/ && node tests/all-tests.js)",
    "test:make": "(cd packages/parser-generator/examples/ && make clean && make ts-node-calculator-demo && make js-calculator-demo && make ts-calculator-demo)",
    "test-todo": "(cd packages/parser-generator/ && node tests/all-tests.js);"
  }
}
